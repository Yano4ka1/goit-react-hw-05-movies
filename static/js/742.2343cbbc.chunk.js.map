{"version":3,"file":"static/js/742.2343cbbc.chunk.js","mappings":"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","sources":["constants.js","pages/MovieDetails/MovieDetails.styled.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx","services/Api.js"],"sourcesContent":["export const IMAGE_BASE_API_URL = `https://image.tmdb.org/t/p/w500`;\nexport const FALLBACK_IMAGE_URL = `https://i.postimg.cc/htSNfpBY/movie-card-plug.jpg`;","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.main`\n    padding: ${p => p.theme.space[4]}px;\n`;\n\nexport const AdditionalInfo = styled.div`\n    h2 {\n        font-size: 20px;\n        color: ${p => p.theme.colors.accentTextColor};\n    }\n`;\n\nexport const List = styled.ul`\n    margin-top: ${p => p.theme.space[3]}px;\n    margin-bottom: ${p => p.theme.space[3]}px;\n\n    a {\n        font-weight: 700;\n        display: block;\n        padding-top: ${p => p.theme.space[2]}px;\n        padding-bottom: ${p => p.theme.space[2]}px;\n        transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n        &:hover,\n        &:focus {\n            color: ${p => p.theme.colors.accent};\n        }\n    }\n`;\n\nexport const GoBackBtn = styled(Link)`\n    display: block;\n    min-width: 60px;\n    max-width: 140px;\n    padding: ${p => p.theme.space[1]}px;\n    height: ${p => p.theme.space[4]}px;\n    border: 1px solid ${p => p.theme.colors.accentTextColor};\n    color: ${p => p.theme.colors.white};\n    font-weight: 500;\n    border-radius: 4px;\n    margin-bottom: ${p => p.theme.space[3]}px;\n    text-align: center;\n    background-color: ${p => p.theme.colors.accentBackgroundColor};\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n            color: ${p => p.theme.colors.accent};\n    }\n`;","import styled from '@emotion/styled';\n\nexport const MovieCardStyled = styled.div`\n    margin-bottom: ${p => p.theme.space[3]}px;\n    padding: ${p => p.theme.space[3]}px;\n    border-radius: 5px;\n    box-shadow: ${p => p.theme.boxShadow.second};\n\n    @media screen and (min-width: 768px) {\n        display: flex;\n    }\n\n    h2 {\n        margin-bottom: ${p => p.theme.space[3]}px;\n        color: ${p => p.theme.colors.accentTextColor};  \n    }\n`;\n\nexport const ImageWrapper = styled.div`\n    width: 100%;\n    height: auto;\n    border-radius: 5px;\n\n    @media screen and (max-width: 767.98px) {\n        margin-bottom: ${p => p.theme.space[4]}px;\n    }\n\n    @media screen and (min-width: 768px) {\n        width: 200px;\n        height: 300px;\n        margin-right: ${p => p.theme.space[4]}px;\n    }\n\n    img {\n        width: 100%;\n        border-radius: 5px;\n\n        @media screen and (min-width: 768px) {\n            width: 200px;\n        }\n    }\n`;\n\nexport const Rating = styled.p`\n    margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Overview = styled.div`\n    margin-bottom: ${p => p.theme.space[4]}px;\n  \n    h3 {\n        margin-bottom: ${p => p.theme.space[2]}px;\n    }\n`;\n\nexport const Genres = styled.div`\n    h3 {\n        margin-bottom: ${p => p.theme.space[2]}px;\n    }\n`;","import { Genres, ImageWrapper, MovieCardStyled, Overview, Rating } from \"./MovieCard.styled\"\n// import PropTypes from 'prop-types';\n\n\nexport const MovieCard = ({ title, genres, overview, image, rating, year }) => {\n    // console.log('title', title);\n    return (\n        <MovieCardStyled>\n            <ImageWrapper>\n                <img src={image} alt={title} width=\"200px\" height=\"300px\" />\n            </ImageWrapper>\n        \n            <div>\n                <h2>{title} ({year})</h2>\n                <Rating>User score: {rating}%</Rating>\n                \n                <Overview>\n                    <h3>Overwiev</h3>\n                    <p>{overview}</p>\n                </Overview>\n\n                <Genres>\n                    <h3>Genres</h3>\n                    <p>{genres}</p>\n                </Genres>\n            </div>\n        </MovieCardStyled>\n    );\n};\n\n// MovieCard.propTypes = {\n//     genres: PropTypes.string.isRequired,\n//     title: PropTypes.string.isRequired,\n//     image: PropTypes.string.isRequired,\n//     overview: PropTypes.string.isRequired,\n//     rating: PropTypes.number.isRequired,\n//     year: PropTypes.string.isRequired,\n//   };","import { Outlet, useParams, Link, useLocation } from \"react-router-dom\";\nimport * as API from '../../services/Api';\nimport { useState, useEffect, useRef, Suspense } from \"react\";\nimport { IMAGE_BASE_API_URL, FALLBACK_IMAGE_URL } from \"constants\";\nimport { AdditionalInfo, Container, GoBackBtn, List } from \"./MovieDetails.styled\";\nimport { MovieCard } from \"components/MovieCard/MovieCard\";\n\nconst navItem = [\n    { href: 'cast', label: 'Cast' },\n    { href: 'reviews', label: 'Reviews' },\n    \n]\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState({});\n    const { movieId } = useParams();   // from <Route path=\"movies/:movieId\" element={<MovieDetails />}>\n    const location = useLocation();\n    /* go back to previous page OR default Home page if location null*/\n  const previousPage = useRef(location?.state?.from ?? '/');\n\n    useEffect(() => {\n      \n        getMovieById();\n\n        async function getMovieById() {\n          \n            const fetchMovie = await API.getMovieById(movieId);\n            const { genres, original_title, overview, poster_path, vote_average, release_date\n            } = fetchMovie;\n            \n            setMovie({\n                title: original_title,\n                genres: genres.map(genre => genre.name).join(', '),\n                overview,\n                poster_path: poster_path ? IMAGE_BASE_API_URL + poster_path : FALLBACK_IMAGE_URL,\n                rating: Math.round(vote_average * 10),\n                year: release_date.slice(0, 4),\n            });            \n        }    \n    }, [movieId])\n    \n    if (!movie) return null;\n\n    const { title, genres, overview, poster_path, rating, year } = movie;\n    // console.log('location+state', location);\n\n    return (\n        <Container>\n            <GoBackBtn to={previousPage.current}>Go back</GoBackBtn>\n            <MovieCard rating={rating} image={poster_path} title={title} genres={genres} overview={overview} year={year} />\n            <AdditionalInfo>\n                <h2>Additional inormation</h2>\n                <List>\n                    {navItem.map(({ href, label }) => (\n                        <li key={href}>\n                            <Link to={href}>{label}</Link>\n                        </li>\n                    ))}\n                </List>\n                <Suspense fallback={null}>\n                    <Outlet/>\n                </Suspense>\n                \n            \n            </AdditionalInfo>\n        </Container>\n    )\n}\n\nexport default MovieDetails;\n","import axios from \"axios\";\n\nconst API_KEY = '70dd3cfa80de1915d6c85a48e09c15b1';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_MOVIES = 'trending/movie/day';\nconst SEARCH_MOVIE = 'search/movie';\nconst MOVIE = 'movie/';\nconst CREDITS = '/credits';\nconst REVIEWS = '/reviews';\n\nconst defaultParams = {\n    api_key: API_KEY,\n    language: 'en-US',\n};\n\nexport const getTrendingMovies = async () => {\n    const url = `${BASE_URL}${TRENDING_MOVIES}`;\n    const options = {\n        params: { ...defaultParams, page: 1 }\n    };\n\n    try {\n        const response = await axios.get(url, options);\n        return response.data.results;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const searchMovieByQuery = async query => {\n    const url = `${BASE_URL}${SEARCH_MOVIE}`;\n    const options = {\n        params: { ...defaultParams, page: 1, query }\n    };\n\n    try {\n        const response = await axios.get(url, options);\n        return response.data.results;\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getMovieById = async movieId => {\n    const url = `${BASE_URL}${MOVIE}${movieId}`;\n    const options = {\n        params: { ...defaultParams}\n    };\n\n    try {\n        const response = await axios.get(url, options);\n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getMovieCastById = async movieId => {\n    const url = `${BASE_URL}${MOVIE}${movieId}${CREDITS}`;\n    const options = {\n        params: { ...defaultParams}\n    };\n\n    try {\n        const response = await axios.get(url, options);\n        return response.data.cast;\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getMovieReviewsById = async movieId => {\n    const url = `${BASE_URL}${MOVIE}${movieId}${REVIEWS}`;\n    const options = {\n        params: { ...defaultParams, page: 1}\n    };\n\n    try {\n        const response = await axios.get(url, options);\n        return response.data.results;\n    }\n    catch (error) {\n        console.log(error);\n    }\n}"],"names":["IMAGE_BASE_API_URL","FALLBACK_IMAGE_URL","Container","styled","p","theme","space","AdditionalInfo","colors","accentTextColor","List","accent","GoBackBtn","Link","white","accentBackgroundColor","MovieCardStyled","boxShadow","second","ImageWrapper","Rating","Overview","Genres","MovieCard","title","genres","overview","image","rating","year","src","alt","width","height","navItem","href","label","useState","movie","setMovie","movieId","useParams","location","useLocation","previousPage","useRef","state","from","useEffect","API","fetchMovie","original_title","poster_path","vote_average","release_date","map","genre","name","join","Math","round","slice","getMovieById","to","current","Suspense","fallback","BASE_URL","MOVIE","defaultParams","api_key","language","getTrendingMovies","url","options","params","page","axios","response","data","results","console","log","searchMovieByQuery","query","getMovieCastById","cast","getMovieReviewsById"],"sourceRoot":""}
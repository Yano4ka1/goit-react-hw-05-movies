{"version":3,"file":"static/js/253.9ab87b64.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","constants.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MovieListStyled = styled.ul`\n  margin-top: ${p => p.theme.space[4]}px;\n  font-size: 18px;\n  display: flex;\n  gap: ${p => p.theme.space[3]}px;\n  flex-direction: column;\n\n  @media screen and (min-width: 480px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: ${p => p.theme.space[5]}px;\n  }\n\n  li {\n    border-radius: 5px;\n    box-shadow: ${p => p.theme.boxShadow.second};\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover,\n    &:focus {\n      transform: scale(1.03);\n      color: ${p => p.theme.colors.accent};\n    }\n\n    @media screen and (min-width: 480px) {\n      flex-basis: calc((100% - ${p => p.theme.space[3]}px) / 2);\n    }\n    @media screen and (min-width: 768px) {\n      flex-basis: calc((100% - 2 * ${p => p.theme.space[3]}px) / 3);\n    }\n    @media screen and (min-width: 1200px) {\n      flex-basis: calc((100% - 3 * ${p => p.theme.space[3]}px) / 4);\n    }\n  }\n\n  a {\n    display: block;\n    padding-top: ${p => p.theme.space[1]}px;\n    padding-left: ${p => p.theme.space[1]}px;\n    padding-right: ${p => p.theme.space[1]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const MovieCardItemStyled = styled.div`\n  text-align: center;\n  img {\n    border-radius: 5px;\n    margin-bottom: ${p => p.theme.space[2]}px;\n  }\n`;","import { FALLBACK_IMAGE_URL, IMAGE_BASE_API_URL } from \"constants\";\nimport { Link } from \"react-router-dom\";\nimport { MovieCardItemStyled, MovieListStyled } from \"./MovieList.styled\";\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies, isMoviePage = false, prevLocation }) => {\n\n    return (\n        <MovieListStyled>\n            {isMoviePage ? movies.map(({ id, title, poster_path }) => (\n                <li key={id}>\n                    <Link to={`${id}`} state={{ from: `${prevLocation}` }}>\n\n                        <MovieCardItemStyled>\n                            <img src={poster_path ? IMAGE_BASE_API_URL + poster_path : FALLBACK_IMAGE_URL} alt={title} width=\"200px\" height=\"300px\" />\n                            <h3>{title}</h3>\n                        </MovieCardItemStyled>\n                    </Link>\n                </li>\n            ))\n                :\n                movies.map(({ id, title, poster_path }) => (\n                    <li key={id}>\n                        <Link to={`movies/${id}`} state={{ from: `${prevLocation}` }}>\n    \n                            <MovieCardItemStyled>\n                                <img src={poster_path ? IMAGE_BASE_API_URL + poster_path : FALLBACK_IMAGE_URL} alt={title} width=\"200px\" height=\"300px\" />\n                                <h3>{title}</h3>\n                            </MovieCardItemStyled>\n                        </Link>\n                    </li>\n                ))}\n        </MovieListStyled>\n    )\n};\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n    isMoviePage: PropTypes.bool,\n    prevLocation: PropTypes.string.isRequired,\n  };","export const IMAGE_BASE_API_URL = `https://image.tmdb.org/t/p/w500`;\nexport const FALLBACK_IMAGE_URL = `https://i.postimg.cc/htSNfpBY/movie-card-plug.jpg`;","import styled from '@emotion/styled';\n\nexport const SearchFormStyled = styled.form`\n//   label {\n//     display: flex;\n//     flex-direction: column;\n//   }\n\n  input {\n    margin-top: 0px;\n    padding: ${p => p.theme.space[2]}px;\n    padding-right: ${p => p.theme.space[6]}px;\n\n    border-radius: 4px;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n    width: 80px;\n    height: ${p => p.theme.space[4]}px;\n    padding: ${p => p.theme.space[1]}px;\n    margin-left: ${p => p.theme.space[3]}px;\n    border: 1px solid ${p => p.theme.colors.accentTextColor};\n    color: ${p => p.theme.colors.white};\n    font-size: 14px;\n    font-weight: 500;\n    border-radius: 4px;\n    text-align: center;\n    background-color: ${p => p.theme.colors.accentBackgroundColor};\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n\n    &:hover,\n    &:focus {\n            color: ${p => p.theme.colors.accent};\n    }\n`;","import { SearchBtn, SearchFormStyled } from \"./SearchForm.styled\";\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ onSubmit }) => {\n\n    return (\n        <>\n            <SearchFormStyled onSubmit={onSubmit}>\n                <label>\n                    <input\n                    name=\"query\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Enter movies for searching\"\n                    />\n                </label>\n                <SearchBtn type=\"submit\">Search</SearchBtn>\n            </SearchFormStyled>\n        </>\n    )\n}\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","import styled from '@emotion/styled';\n\nexport const Container = styled.main`\n  padding: ${p => p.theme.space[4]}px;\n  \n`;","import { MovieList } from \"components/MovieList/MovieList\";\nimport SearchForm from \"components/SearchForm/SearchForm\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport * as API from '../../services/Api';\nimport { Container } from \"./Movies.styled\";\n// import { toast } from 'react-toastify';\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const location = useLocation();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const nameMovie = searchParams.get('query');\n\n    \n    useEffect(() => {\n        if (!nameMovie) return;\n        \n        searchMoviesByQuery(nameMovie);\n        \n        async function searchMoviesByQuery(nameMovie) {\n            try {\n                const results = await API.searchMovieByQuery(nameMovie);\n                // console.log('results MoviesSearch', results);\n\n                if (results.length === 0) {\n                    alert(`There are no movies found. Please, try again`);\n                }\n                \n                setMovies([...results]);\n            }\n            catch (error) {\n                console.log(error);\n            }\n        }\n    }, [nameMovie]);\n\n    const handleFormSubmit = e => {\n        e.preventDefault();\n        const { query } = e.target.elements;\n        const searchQuery = query.value.trim();\n\n        if (!searchQuery) {\n            alert('Please add a movie name!');\n            return;\n        }\n\n        setSearchParams({ query: searchQuery });\n        e.target.reset();\n    }\n    \n    // if (!movies) return null;\n    // console.log('location Movie :>> ', location);\n    return (\n        <Container>\n            <SearchForm onSubmit={handleFormSubmit } /> \n            {movies.length > 0 && (\n                <MovieList\n                    movies={movies}\n                    isMoviePage={true}\n                    prevLocation={location.pathname + location.search }\n                />\n            )}\n        </Container>\n    )\n};\n\nexport default Movies;","import axios from \"axios\";\n\nconst API_KEY = '70dd3cfa80de1915d6c85a48e09c15b1';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_MOVIES = 'trending/movie/day';\nconst SEARCH_MOVIE = 'search/movie';\nconst MOVIE = 'movie/';\nconst CREDITS = '/credits';\nconst REVIEWS = '/reviews';\n\nconst defaultParams = {\n    api_key: API_KEY,\n    language: 'en-US',\n};\n\nexport const getTrendingMovies = async () => {\n    const url = `${BASE_URL}${TRENDING_MOVIES}`;\n    const options = {\n        params: { ...defaultParams, page: 1 }\n    };\n\n    try {\n        const response = await axios.get(url, options);\n        return response.data.results;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const searchMovieByQuery = async query => {\n    const url = `${BASE_URL}${SEARCH_MOVIE}`;\n    const options = {\n        params: { ...defaultParams, page: 1, query }\n    };\n\n    try {\n        const response = await axios.get(url, options);\n        return response.data.results;\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getMovieById = async movieId => {\n    const url = `${BASE_URL}${MOVIE}${movieId}`;\n    const options = {\n        params: { ...defaultParams}\n    };\n\n    try {\n        const response = await axios.get(url, options);\n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getMovieCastById = async movieId => {\n    const url = `${BASE_URL}${MOVIE}${movieId}${CREDITS}`;\n    const options = {\n        params: { ...defaultParams}\n    };\n\n    try {\n        const response = await axios.get(url, options);\n        return response.data.cast;\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getMovieReviewsById = async movieId => {\n    const url = `${BASE_URL}${MOVIE}${movieId}${REVIEWS}`;\n    const options = {\n        params: { ...defaultParams, page: 1}\n    };\n\n    try {\n        const response = await axios.get(url, options);\n        return response.data.results;\n    }\n    catch (error) {\n        console.log(error);\n    }\n}"],"names":["MovieListStyled","styled","p","theme","space","boxShadow","second","colors","accent","MovieCardItemStyled","MovieList","movies","isMoviePage","prevLocation","map","id","title","poster_path","to","state","from","src","IMAGE_BASE_API_URL","FALLBACK_IMAGE_URL","alt","width","height","SearchFormStyled","SearchBtn","accentTextColor","white","accentBackgroundColor","onSubmit","name","type","autoComplete","autoFocus","placeholder","Container","useState","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","nameMovie","get","useEffect","API","results","length","alert","console","log","searchMoviesByQuery","e","preventDefault","searchQuery","target","elements","query","value","trim","reset","pathname","search","BASE_URL","MOVIE","defaultParams","api_key","language","getTrendingMovies","url","options","params","page","axios","response","data","searchMovieByQuery","getMovieById","movieId","getMovieCastById","cast","getMovieReviewsById"],"sourceRoot":""}
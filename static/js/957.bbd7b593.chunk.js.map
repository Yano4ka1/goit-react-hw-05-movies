{"version":3,"file":"static/js/957.bbd7b593.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/ActorCard.jsx","components/Cast/Cast.jsx","constants.js","services/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: flex;\n  gap: ${p => p.theme.space[3]}px;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n\n  li {\n    border-radius: 5px;\n    box-shadow: ${p => p.theme.boxShadow.second};\n    text-align: center;\n\n    @media screen and (min-width: 768px) {\n      flex-basis: calc((100% - 3 * ${p => p.theme.space[3]}px) / 4);\n    }\n\n    @media screen and (min-width: 1200px) {\n      flex-basis: calc((100% - 5 * ${p => p.theme.space[3]}px) / 6);\n    }\n  }\n`;\n\nexport const Card = styled.div`\n    padding-top: ${p => p.theme.space[1]}px;\n    padding-left: ${p => p.theme.space[1]}px;\n    padding-right: ${p => p.theme.space[1]}px;\n    padding-bottom: ${p => p.theme.space[3]}px;\n\n    img {\n        width: 100%;\n        height: auto;\n        margin-bottom: ${p => p.theme.space[2]}px;\n        border-radius: 5px;\n    }\n\n    p {\n        padding-top: ${p => p.theme.space[2]}px;\n        padding-bottom: ${p => p.theme.space[2]}px;\n        font-weight: 500;\n    }\n    \n    span {\n        margin-top: ${p => p.theme.space[1]}px;\n        display: block;\n        font-weight: 400;\n    }\n`;","import { Card } from \"./Cast.styled\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ActorCard = ({ name, character, photo }) => {\n    return (\n        <Card>\n            <img src={photo} alt={name} width=\"100px\" height=\"150px\" />\n            <p>\n                name: <span>{name}</span>\n            </p>\n            <p>\n                character: <span>{character}</span>\n            </p>\n        </Card>\n    );\n};\n\nActorCard.propTypes = {\n    photo: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  };","import { FALLBACK_IMAGE_URL, IMAGE_BASE_API_URL } from 'constants';\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as API from '../../services/Api';\nimport { ActorCard } from './ActorCard';\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n    const [cast, setCast] = useState(null);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        getMovieCastById();\n\n        async function getMovieCastById() {\n\n            const results = await API.getMovieCastById(movieId);\n            // console.log('results :>> ', results);\n            const actorList = results.length > 24 ? results.slice(0, 24) : results;\n            setCast(actorList);\n        }\n    }, [movieId]);\n\n    if (!cast) return null;\n\n    return (\n        <CastList>\n            {cast.map(({ original_name, character, profile_path, id }) =>\n                (<li key={id}>\n                    <ActorCard\n                        photo={profile_path ? IMAGE_BASE_API_URL + profile_path : FALLBACK_IMAGE_URL}\n                        name={original_name}\n                        character={character}\n                    />\n                </li>)\n            )}\n        </CastList>\n    );\n};\n\nexport default Cast;","export const IMAGE_BASE_API_URL = `https://image.tmdb.org/t/p/w500`;\nexport const FALLBACK_IMAGE_URL = `https://i.postimg.cc/htSNfpBY/movie-card-plug.jpg`;","import axios from \"axios\";\n\nconst API_KEY = '70dd3cfa80de1915d6c85a48e09c15b1';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_MOVIES = 'trending/movie/day';\nconst SEARCH_MOVIE = 'search/movie';\nconst MOVIE = 'movie/';\nconst CREDITS = '/credits';\nconst REVIEWS = '/reviews';\n\nconst defaultParams = {\n    api_key: API_KEY,\n    language: 'en-US',\n};\n\nexport const getTrendingMovies = async () => {\n    const url = `${BASE_URL}${TRENDING_MOVIES}`;\n    const options = {\n        params: { ...defaultParams, page: 1 }\n    };\n\n    try {\n        const response = await axios.get(url, options);\n        return response.data.results;\n    }\n    catch (error) {\n        console.log(error);\n    }\n};\n\nexport const searchMovieByQuery = async query => {\n    const url = `${BASE_URL}${SEARCH_MOVIE}`;\n    const options = {\n        params: { ...defaultParams, page: 1, query }\n    };\n\n    try {\n        const response = await axios.get(url, options);\n        return response.data.results;\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getMovieById = async movieId => {\n    const url = `${BASE_URL}${MOVIE}${movieId}`;\n    const options = {\n        params: { ...defaultParams}\n    };\n\n    try {\n        const response = await axios.get(url, options);\n        return response.data;\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getMovieCastById = async movieId => {\n    const url = `${BASE_URL}${MOVIE}${movieId}${CREDITS}`;\n    const options = {\n        params: { ...defaultParams}\n    };\n\n    try {\n        const response = await axios.get(url, options);\n        return response.data.cast;\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getMovieReviewsById = async movieId => {\n    const url = `${BASE_URL}${MOVIE}${movieId}${REVIEWS}`;\n    const options = {\n        params: { ...defaultParams, page: 1}\n    };\n\n    try {\n        const response = await axios.get(url, options);\n        return response.data.results;\n    }\n    catch (error) {\n        console.log(error);\n    }\n}"],"names":["CastList","styled","p","theme","space","boxShadow","second","Card","ActorCard","name","character","photo","src","alt","width","height","useState","cast","setCast","movieId","useParams","useEffect","API","results","actorList","length","slice","getMovieCastById","map","original_name","profile_path","id","IMAGE_BASE_API_URL","FALLBACK_IMAGE_URL","BASE_URL","MOVIE","defaultParams","api_key","language","getTrendingMovies","url","options","params","page","axios","response","data","console","log","searchMovieByQuery","query","getMovieById","getMovieReviewsById"],"sourceRoot":""}